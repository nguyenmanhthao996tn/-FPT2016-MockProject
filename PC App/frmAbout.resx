<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbAboutUs.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQubmV0IDQu
        MC4xMAAA/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEB/9sAQwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB/8AAEQgAUwB9AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A/v1CLgfKvQfwj0+lLsX+6v8A3yP8KUdB9B/KjPXnHpn6f0/zxQAmxf7q/wDfI/wo2L/d
        X/vkf4Vw3gz4meB/iDd+KbHwhr9prV34L1ybw74kgt/MV9O1WAHfC4lRPNiLJLHHdQ+ZbSy29xHFK7wS
        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
</value>
  </data>
</root>